(this.webpackJsonpralph=this.webpackJsonpralph||[]).push([[3],{221:function(e,a,t){"use strict";t.d(a,"b",(function(){return n})),t.d(a,"a",(function(){return i}));const n={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"};let r=[];Object.keys(n).forEach(e=>{r=[...r,{text:n[e],value:e}]});const i=r},222:function(e,a,t){"use strict";t.d(a,"a",(function(){return s}));var n=t(0),r=t.n(n),i=t(246),l=t(247);const s=({columns:e,data:a})=>r.a.createElement("table",{className:"table__au-table au-table"},r.a.createElement(i.a,{headers:e}),r.a.createElement(l.a,{data:a,columns:e}))},253:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));const n=[{text:"VIC",value:"VIC"},{text:"QLD",value:"QLD"},{text:"ACT",value:"ACT"},{text:"SA",value:"SA"},{text:"WA",value:"WA"},{text:"TAS",value:"TAS"},{text:"NT",value:"NT"}]},254:function(e,a,t){"use strict";t.d(a,"a",(function(){return n})),t.d(a,"b",(function(){return r}));const n="ADMINISTRATIVE",r=[{text:"Administrative",value:n},{text:"Technical",value:"TECHNICAL"}]},304:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),i=t(16),l=t.n(i),s=t(11),c=t(176),o=t(175),m=t(186),u=t(30),d=t(181),b=t(10),E=(t(435),t(19)),g=t(28),p=t(183),C=t(14),S=t(179),A=t(54),h=t.n(A),y=t(185),M=t(184),L=t(253),N=t(221),I=t(29),O=t(22),T=t(178),x=t(254),G=(t(436),t(2)),v=t(182);const B=y.object().shape({name:y.string().required("Organisation name is required"),registrantName:y.string().required("Registrant name is required"),registrantContactName:y.string().required("Registrant contact name is required"),registrantContactEmail:y.string().email("Valid email required").required("Registrant email is required"),phone:y.string().required("Organisation phone number is required"),street1:y.string().required("Street address is required"),city:y.string().required("City is required"),postcode:y.string().required("Post code is required"),state:y.string().required("State is required"),countryCode:y.string().required("Country is required"),contacts:y.array().of(y.object().shape({name:y.string().required("Name is required"),email:y.string().email("Valid email required").required("Email is required"),type:y.string().required("Type is required")})).required("Must have a contact")}),R=Object(G.a)("edit-organisation-form"),U=({initialValues:e,onSubmit:a})=>{const t=Object(n.useState)(!1),i=Object(g.a)(t,2),s=i[0],m=i[1],u=Object(O.a)().authDetails,b=u.userId,E=u.organisationId,p=Object(v.a)(`${T.b.Users}?searchOrganisationId=${E}`).response,C=e.ownerUserId;return void 0===p?null:r.a.createElement(S.e,{initialValues:e,onSubmit:a,validationSchema:B},({values:e})=>r.a.createElement(r.a.Fragment,null,r.a.createElement(S.d,null,r.a.createElement(M.a,{textLabel:"Organisation name",name:"name"}),r.a.createElement(M.a,{textLabel:"Registrant name",name:"registrantName"}),r.a.createElement(M.a,{textLabel:"Registrant contact name",name:"registrantContactName"}),r.a.createElement(M.a,{textLabel:"Registrant contact email",name:"registrantContactEmail"}),r.a.createElement(M.a,{textLabel:"Phone",name:"phone"}),r.a.createElement(M.a,{textLabel:"Address line 1",name:"street1"}),r.a.createElement(M.a,{textLabel:"Address line 2",name:"street2"}),r.a.createElement(M.a,{textLabel:"Address line 3",name:"street3"}),r.a.createElement(d.a,null,r.a.createElement(c.b,null,r.a.createElement(o.b,{size:3},r.a.createElement(M.a,{textLabel:"City",name:"city"})),r.a.createElement(o.b,{size:3},r.a.createElement(M.a,{textLabel:"Post Code",name:"postcode"})),r.a.createElement(o.b,{size:3},r.a.createElement(M.a,{textLabel:"State",name:"state",as:h.a,options:[{text:"N/A",value:""},...L.a]})),r.a.createElement(o.b,{size:3},r.a.createElement(M.a,{textLabel:"Country",name:"countryCode",as:h.a,options:[{text:"N/A",value:""},...N.a]})))),r.a.createElement(I.b,{condition:C===b},r.a.createElement(M.a,{textLabel:"Organisation Owner",name:"ownerUserId",as:h.a,options:p.users.content.map(e=>({text:e.email,value:e.id}))})),r.a.createElement(d.a,null,r.a.createElement(S.c,{name:"contacts",render:a=>r.a.createElement("div",null,e.contacts.map((t,n)=>r.a.createElement("div",{key:n},r.a.createElement(c.b,null,r.a.createElement(o.b,{size:4},r.a.createElement(M.a,{textLabel:`Contact name ${n+1}`,name:`contacts[${n}].name`})),r.a.createElement(o.b,{size:4},r.a.createElement(M.a,{textLabel:"Contact email",name:`contacts.${n}.email`})),r.a.createElement(o.b,{size:4},r.a.createElement(M.a,{as:h.a,textLabel:"Contact type",name:`contacts.${n}.type`,options:x.b}))),r.a.createElement(d.a,null,r.a.createElement(l.a,{className:"au-btn--type-error",type:"button",onClick:()=>{e.contacts.length>1?(m(!1),a.remove(n)):m(!0)}},"Remove")),r.a.createElement(I.b,{condition:s&&1===e.contacts.length},r.a.createElement("p",{className:R("error-msg")},"Must have at least 1 organisation contact.")))),r.a.createElement(d.a,null,r.a.createElement(l.a,{type:"button",onClick:()=>a.push({name:"",email:"",type:x.a})},"Add additional contact")))})),r.a.createElement(l.a,{type:"submit"},"Save"))))};var P=t(47),j=t(46);const q=({org:e,history:a})=>{const t=Object(p.a)().initiateRequest,i=Object(n.useState)(""),m=Object(g.a)(i,2),b=m[0],S=m[1],A=e.contacts.map(e=>Object(E.a)({},e,{type:e.type.toUpperCase()}));return r.a.createElement(c.b,null,r.a.createElement(o.b,{size:3},r.a.createElement(d.a,{marginTop:0},r.a.createElement(s.a,null,"Details"),r.a.createElement(l.a,{onClick:a.goBack},"Cancel"))),r.a.createElement(o.b,{size:9},r.a.createElement(U,{initialValues:{id:e.id,name:e.name,registrantName:e.registrantName,registrantContactName:e.registrantContactName,registrantContactEmail:e.registrantContactEmail,phone:e.phone||"",street1:e.street1||"",street2:e.street2||"",street3:e.street3||"",city:e.city||"",postcode:e.postcode||"",state:e.state||"",countryCode:e.countryCode,contacts:A,ownerUserId:e.ownerUserId,expectedVersion:e.version},onSubmit:a=>{S("");const n=Object(C.e)(`${u.a.Organisations}/${e.id}`,a);t(n,e=>{S(e.message)},()=>{Object(j.b)(2)})}}),r.a.createElement(P.a,{message:b})))};var k=t(188),V=t(222),D=t(451),F=t(1),K=t(48),f=(t(446),t(50)),z=t(303),w=t.n(z);const H=Object(G.a)("invite-user-to-org"),$=({org:e})=>{const a=Object(p.a)().initiateRequest,t=Object(n.useState)(""),i=Object(g.a)(t,2),c=i[0],o=i[1],m=Object(n.useState)(!1),d=Object(g.a)(m,2),b=d[0],E=d[1],A=Object(n.useState)(""),h=Object(g.a)(A,2),y=h[0],M=h[1],L=w()(e=>Object(C.a)(`${T.b.CheckPresent}?userEmail=${encodeURIComponent(e)}`).then(e=>(M(e.id),o(""),Promise.resolve(!0))).catch(()=>{throw o("User does not exist"),"User does not exist"}),500);return r.a.createElement("main",{className:H()},r.a.createElement(s.a,null,"Add a User to ",e.name),r.a.createElement(P.a,{message:c}),r.a.createElement(S.e,{initialValues:{email:""},onSubmit:t=>{const n=Object(C.e)(`${u.a.Organisations}/${e.id}/users`,{id:e.id,expectedVersion:e.version,userId:y});return a(n,e=>{o(e.message)},()=>{o(""),E(!0),Object(j.b)()})}},()=>r.a.createElement(S.d,{className:H("form")},r.a.createElement(K.AUlabel,{text:"User Email",htmlFor:"email"}),r.a.createElement(S.b,{className:"au-text-input",name:"email",validate:L}),r.a.createElement(l.a,{type:"submit"},"Add user"),r.a.createElement(I.b,{condition:b},r.a.createElement(f.a,{message:"User has been added to organisation"})))))};var Z=t(220);const J=Object(G.a)("organisation-details");a.default=({match:e,orgId:a})=>{const t=Object(v.a)(`${u.a.Organisations}/${a}`).response;return void 0===t?null:r.a.createElement("main",{className:J()},r.a.createElement(b.d,null,r.a.createElement(b.b,{path:`${e.path}/${F.b.InviteUser}`,render:e=>r.a.createElement($,Object.assign({org:t},e))}),r.a.createElement(b.b,{path:`${e.path}/edit`,render:e=>r.a.createElement(q,Object.assign({org:t},e))}),r.a.createElement(b.b,{exact:!0,render:()=>r.a.createElement(r.a.Fragment,null,r.a.createElement(c.b,null,r.a.createElement(o.b,{size:3},r.a.createElement(d.a,{marginTop:0},r.a.createElement(s.a,null,"Details"),r.a.createElement(l.a,{onClick:j.a},"Edit"))),r.a.createElement(o.b,{size:9},r.a.createElement(m.a,{textLabel:"Organisation name"},t.name),r.a.createElement(m.a,{textLabel:"Registrant name"},t.registrantName),r.a.createElement(m.a,{textLabel:"Registrant contact name"},t.registrantContactName),r.a.createElement(m.a,{textLabel:"Registrant contact email"},t.registrantContactEmail),r.a.createElement(m.a,{textLabel:"Organisation type"},t.type),r.a.createElement(m.a,{textLabel:"Phone"},t.phone),r.a.createElement(m.a,{textLabel:"Address"},r.a.createElement("p",null,t.street1),r.a.createElement("p",null,t.street2),r.a.createElement("p",null,t.street3),r.a.createElement("p",null,t.city," ",t.postcode),r.a.createElement("p",null,t.state," ",N.b[t.countryCode])),r.a.createElement(m.a,{textLabel:"Owner name"},t.ownerName),r.a.createElement(m.a,{textLabel:"Owner email"},t.ownerEmail),r.a.createElement(m.a,{textLabel:"Created on"},Object(k.a)(t.createTimestamp)),r.a.createElement(m.a,{textLabel:"Created by"},t.createUserName," ",t.createUserEmail),r.a.createElement(m.a,{textLabel:"Last update on"},t.lastUpdateTimestamp?Object(k.a)(t.lastUpdateTimestamp):"Organisation has never been updated"),r.a.createElement(m.a,{textLabel:"Last updated by"},t.lastUpdateTimestamp?`${t.lastUpdateUserName} ${t.lastUpdateUserEmail}`:"Organisation has never been updated"),r.a.createElement(m.a,{textLabel:"Contacts"},r.a.createElement(V.a,{data:t.contacts,columns:[{title:"Name",key:"name"},{title:"Email",key:"email"},{title:"Type",key:"type"}]})),r.a.createElement(m.a,{textLabel:"Access zones"},r.a.createElement(I.b,{condition:!!t.accessZones.length},r.a.createElement(V.a,{data:t.accessZones,columns:[{title:"ID",key:"id"},{title:"Name",key:"name"}]}))),r.a.createElement(I.b,{condition:!!t.managedZones.length},r.a.createElement(m.a,{textLabel:"Managed Zones"},r.a.createElement(V.a,{data:t.managedZones,columns:[{title:"ID",key:"id"},{title:"Name",key:"name"}]}))))),r.a.createElement(c.b,null,r.a.createElement(o.b,{size:3},r.a.createElement(d.a,{marginTop:0},r.a.createElement(s.a,null,"History"))),r.a.createElement(o.b,{size:9},r.a.createElement(Z.a,{endpoint:`${u.a.Organisations}/${a}/${F.b.History}`}))))})),r.a.createElement(b.b,{render:e=>r.a.createElement(D.default,Object.assign({org:t},e))}))}},435:function(e,a,t){},436:function(e,a,t){},446:function(e,a,t){}}]);
//# sourceMappingURL=3.6b435b94.chunk.js.map